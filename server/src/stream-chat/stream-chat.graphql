# Define the ChatChannel type
type ChatChannel {
  ChannelID: String! 
  ChannelName: String
  Image: String
  Description: String
  Disease: String
  ChannelType: String 
  CreatedAt: String 
  UpdatedAt: String
  Members: [ChannelMember!]! 
  }


enum ChatMessageType{
  myChat,
  other
}
type ChatMessage {
  ChannelID: String 
  ChatID: String!
  Content: String
  SenderID: String
  MediaUrl: String
  SentAt: String 
  IsSeen: Boolean
  sender:ChannelMember
}

type ChannelMember {
  UserID: String! 
  Role:String
  Username:String
  FirstName:String
  LastName:String
  ProfilePicture: String
}


input CreateChatChannelInput {
  ChannelName: String
  Image: String
  Description: String
  Disease: String
  ChannelType: String
}

input UpdateChatChannelInput {
  id: String! # Assuming ChannelID is a string
}

#
type Query {
  userChannel(UserID:String!): [ChatChannel]! 
  getChannel(ChannelID: String!): ChatChannel 
  getChats(UserID: String!,ChannelID:String): [ChatMessage]
}


type Mutation {
  createChatChannel(input: CreateChatChannelInput!): ChatChannel!
  updateChatChannel(input: UpdateChatChannelInput!): ChatChannel!
  deleteChat(ChatID: String!): ChatMessage!
}
