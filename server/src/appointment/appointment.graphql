enum AppointmentType {
  initialConsultation
  followUp
  emergency
}
enum AppointmentStatus {
  pending
  reschedulePending
  booked
  completed
  cancelled
  overdue
}
enum Gender {
  male
  female
}

enum UpdateAppointmentType{
  cancelAppointment,
  rescheduleAppointment
}



scalar Date

type Appointment {
  AppointmentID:String!
  DoctorID:String!
  PatientID:String!
  ScheduleID:String
  AppointmentDate:Date!
  AppointmentTime:Date!
  Duration:Int
  PatientName:String
  PatientPhoto:String
  PatientGender:Gender
  PatientDOB:Date
  CreatedAt:Date
  DoctorGender:Gender
  DoctorName:String
  DoctorPhoto:String
  Status:AppointmentStatus
  AppointmentType:AppointmentType
  Note:String
}

type UserAppointmentResponse{
  upcomingAppointments:[Appointment]
  pastAppointments:[Appointment]
}



input CreateAppointmentInput {
  DoctorID:String!
  PatientID:String!
  ScheduleID:String!
  AppointmentDate:Date!
  AppointmentTime:Date!
  VideoChatRoomID:String
  Duration:Int
  AppointmentType:AppointmentType
  Note:String   
}

input UpdateAppointmentInput {
  AppointmentID:String!
  DoctorID:String!
  PatientID:String!
  ScheduleID:String
  AppointmentDate:Date
  AppointmentTime:Date
  VideoChatRoomID:String
  Duration:Int
  Status:AppointmentStatus
  AppointmentType:AppointmentType
  Note:String   
  CancelledBy:String
  CancelledReason:String 
  UpdatedBy:String
  UpdateType:UpdateAppointmentType
}

input EmergencyAppointmentInput{
    ScheduleID:String!
    DoctorID:String!
    PatientID:String!
    AppointmentTime:Date!
    Duration:Int 
    }

type Query {
  UserAppointments(UserID:String!):UserAppointmentResponse

  DoctorsAppointments(DoctorID:String!):[Appointment]

  FilterUserAppointment(UserID:String!,Query:String!):[Appointment]
  
  FilterDoctorAppointment(DoctorID:String!,Query:String!):[Appointment]
  checkIfOverDue:[Appointment]
  
  FilterAppointments(Query:String): [Appointment]
  GetAppointmentByID(Id:String!):Appointment
}

type Mutation {
  CreateAppointment(createAppointmentInput: CreateAppointmentInput!): Appointment!
  
  UpdateAppointment(updateAppointmentInput: UpdateAppointmentInput!): Appointment!

  CreateEmergencyAppointment(emergencyAppointmentInput:EmergencyAppointmentInput):Appointment  

  AcceptAppointment(DoctorID:String!,AppointmentID:String!,Duration:Int!,Status:AppointmentStatus!):Appointment

  DeclineAppointment(CancelledBy:String!,AppointmentID:String!,CancelledReason:String):Appointment

  RemoveAppointment(Id: String!): Appointment
}
